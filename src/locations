#!/usr/bin/env bash

# Shell Script for Creating, Loading and
# Writing file with Custom Locations

make_loc() {
  #
  SAVE_PATH="$HOME/.config/wayweather/locations.json"
  if [ ! -f "$SAVE_PATH" ]; then
    printf "{}" >"$SAVE_PATH"
  fi
  echo "[LOG] Created Custom Locations File"
}

load_loc() {
  SAVE_PATH="$HOME/.config/wayweather/locations.json"
  JSON="$(cat "$SAVE_PATH" | jq -c)"
  DEFAULT=false

  case $1 in
  default)
    DEFAULT=true
    ;;
  esac

  if ! $DEFAULT; then
    for index in $(seq 0 "$(($(echo "$JSON" | jq length) - 1))"); do
      UNITS="$(if [[ $(echo "$JSON" | jq ".[\"$index\"].units") == '"met"' ]]; then echo "°C, mm, km/h"; else echo "°F, inch, mph"; fi)"
      echo "[$index]\
$(if [[ "$(echo "$JSON" | jq ".[\"$index\"].default")" == "true" ]]; then echo "*"; else echo ""; fi) \
$(echo "$JSON" | jq ".[\"$index\"].city"), $(echo "$JSON" | jq ".[\"$index\"].country") \
($(echo "$JSON" | jq ".[\"$index\"].latitude"), $(echo "$JSON" | jq ".[\"$index\"].longitude")) \
[$UNITS]" | sed -e 's/"//g'
    done
    unset UNITS

    if [[ "$(echo "$JSON" | jq length)" -gt "1" ]]; then
      read -p "Enter a number [0-"$(($(echo "$JSON" | jq length) - 1))"]: " INPUT
      if ! [[ "$INPUT" =~ ^[0-9]+$ ]] || ! [[ "$INPUT" -ge "0" ]] || ! [[ "$INPUT" -le "$(($(echo "$JSON" | jq length) - 1))" ]]; then
        echo "[ERROR] Input Not a Valid Number! Exiting."
        exit 1
      fi
      echo "[LOG] Selecting Locations number $INPUT"
    elif [[ "$(echo "$JSON" | jq length)" -eq "0" ]]; then
      echo "[ERROR] No Locations Saved! Exiting."
      exit 1
    else
      echo "[LOG] Selecting Location number 0"
    fi
  else
    readarray -t def <<<"$(echo "$JSON" | jq ".[].default")"

    for index in $(seq 0 "$((${#def[@]} - 1))"); do
      if [[ "${def[$index]}" == "true" ]]; then
        INPUT="$index"
      fi
    done
    if ! [[ -v INPUT ]]; then
      echo "[ERROR] Default Location Not Set! Exiting"
      exit 1
    else
      UNITS="$(if [[ $(echo "$JSON" | jq ".[\"$INPUT\"].units") == '"met"' ]]; then echo "°C, mm, km/h"; else echo "°F, inch, mph"; fi)"
      echo "[LOG] Default Location Found"
      echo "[LOG] Location: \
$(echo "$JSON" | jq ".[\"$INPUT\"].city"), $(echo "$JSON" | jq ".[\"$INPUT\"].country") \
($(echo "$JSON" | jq ".[\"$INPUT\"].latitude"), $(echo "$JSON" | jq ".[\"$INPUT\"].longitude")) \
[$UNITS]" | sed -e 's/"//g'
      unset UNITS
    fi
  fi

  LAT="$(echo "$JSON" | jq ".[\"$INPUT\"].latitude" | sed -e 's/"//g')"
  LONG="$(echo "$JSON" | jq ".[\"$INPUT\"].longitude" | sed -e 's/"//g')"
  CITY="$(echo "$JSON" | jq ".[\"$INPUT\"].city" | sed -e 's/"//g')"
  COUNTRY="$(echo "$JSON" | jq ".[\"$INPUT\"].country" | sed -e 's/"//g')"
  UNITS="$(echo "$JSON" | jq ".[\"$INPUT\"].units" | sed -e 's/"//g')"

  write_conf set "lat=$LAT" "long=$LONG" "city=$CITY" "country=$COUNTRY" "units=$UNITS"
}

write_loc() {
  SAVE_PATH="$HOME/.config/wayweather/locations.json"
  if $SAVE && [[ -v UNITS ]]; then
    JSON="{\"$(cat "$SAVE_PATH" | jq length)\":{
\"latitude\":$LAT,
\"longitude\":$LONG,
\"city\":\"$CITY\",
\"country\":\"$COUNTRY\",
\"units\":\"$UNITS\",
\"default\":false
}}"
    echo "[LOG] Saved location: $CITY, $COUNTRY ($LAT, $LONG) [$(if [[ "$UNITS" == "met" ]]; then echo "°C, mm, km/h"; else echo "°F, inch, mph"; fi)]"
    # Add check for replacing with new confgigs
    SAVE="$(cat "$SAVE_PATH" | jq ". += $(echo "$JSON" | jq -c)")"
    echo "$SAVE" >"$SAVE_PATH"

    if [[ -v SKIP ]]; then
      exit 1
    fi
  fi
}
