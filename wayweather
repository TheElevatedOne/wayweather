#!/usr/bin/env bash

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"

source "$SCRIPT_DIR/src/config"
source "$SCRIPT_DIR/src/locations"
source "$SCRIPT_DIR/src/output"
source "$SCRIPT_DIR/src/meteo_api"

case $1 in
-h | --help)
  for i in "$@"; do
    case $i in
    -h | --help)
      show_help help
      ;;
    esac
  done
  show_help main
  ;;
-g | --get)
  for i in "$@"; do
    case $i in
    -h | --help)
      show_help get
      ;;
    --no-icon)
      NO_ICON=true
      ;;
    esac
  done
  waybar_return "$(if $NO_ICON; then echo "no-icon"; else echo ""; fi)"
  ;;
-s | --set)
  for i in "$@"; do
    case $i in
    -h | --help)
      show_help set
      ;;
    --lat=*)
      LAT="${i#*=}"
      ;;
    --long=*)
      LONG="${i#*=}"
      ;;
    --city=*)
      CITY="${i#*=}"
      ;;
    --country=*)
      COUNTRY="${i#*=}"
      ;;
    --units=*)
      UNITS="${i#*=}"
      ;;
    --save)
      SAVE=true
      ;;
    --skip-config)
      SKIP=true
      ;;
    esac
  done

  if [[ -v LAT ]] && [[ -v LONG ]] && [[ -v COUNTRY ]] && [[ -v CITY ]]; then
    if [[ "$LAT" != "" ]] && [[ "$LONG" != "" ]] && [[ "$COUNTRY" != "" ]] && [[ "$CITY" != "" ]]; then
      if $SAVE && [[ "$UNITS" != "" ]]; then
        write_loc "lat=$LAT" "long=$LONG" "country=$COUNTRY" "city=$CITY" "units=$UNITS" "$(if [[ -v SKIP ]]; then echo "skip"; else echo ""; fi)"
      fi
      write_conf set "lat=$LAT" "long=$LONG" "country=$COUNTRY" "city=$CITY" "$(if [[ "$UNITS" != "" ]]; then echo "units=$UNITS"; else echo ""; fi)"
    else
      echo "[ERROR] Arguments Empty"
      exit 1
    fi
  elif [[ -v UNITS ]]; then
    if [[ "$UNITS" != "" ]]; then
      write_conf set "units=$UNITS"
    else
      echo "[ERROR] Arguments Empty"
      exit 1
    fi
  else
    echo "[ERROR] Missing Arguments"
    exit 1
  fi
  ;;
-r | --reset)
  for i in "$@"; do
    case $i in
    -h | --help)
      show_help reset
      ;;
    -u | --units)
      UNITS=true
      ;;
    esac
  done
  if $UNITS; then
    make_conf
  else
    write_conf reset
  fi
  ;;
-l | --load)
  for i in "$@"; do
    case $i in
    -h | --help)
      show_help load
      ;;
    default)
      DEF="default"
      ;;
    esac
  done
  load_loc "$DEF"
  ;;
-p | --print)
  for i in "$@"; do
    case $i in
    -h | --help)
      show_help print
      ;;
    --no-icon)
      NO_ICON=true
      ;;
    esac
  done
  term_return "$(if $NO_ICON; then echo "no-icon"; else echo ""; fi)"
  ;;
-sd | --set-default) ;;
-d | --delete) ;;
-w | --daemon) ;;
*)
  echo -e "[ERROR] Invalid Input, Showing Help Message\n"
  show_help main
  ;;
esac
